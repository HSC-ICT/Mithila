showing list of databases -->
	SHOW DATABASES;

create a database -->
	CREATE DATABASE database_name;
		example: CREATE DATABASE college;
		
delete a database -->
	DROP DATABASE database_name;
		example: DROP DATABASE college;
		
create a table and columns-->
		example:CREATE TABLE student
				(
					Roll int(5),
					Name varchar(20),
					Gender varchar(10),
					Age int(5),
					GPA double(3,2),
					City varchar(15),
					
					PRIMARY KEY(Roll)
				);

rename a table -->
	RENAME TABLE student TO student_details;
	
delete a table -->
	DROP TABLE student_details;
	
insert data -->
	INSERT INTO table_name(column1, column2, column3,...,columnN)
	VALUES (value1, value2, value3, ...valueN);
	
	example:INSERT INTO student_details(Roll, Name, Gender, Age, GPA, City)
	VALUES(101, 'Rahim', 'Male', 18, 4.89, 'Dhaka');

	INSERT INTO table_name
	VALUES (value1, value2, value3, ...valueN);
	
	example:INSERT INTO student_details
	VALUES(101, 'Rahim', 'Male', 18, 4.89, 'Dhaka');
	
	adding multiple row at the same time -->
	INSERT INTO student_details
	VALUES
	(101, 'Rahim', 'Male', 18, 4.89, 'Dhaka'),
	(102, 'Karim', 'Male', 19, 4.91, 'Cumilla');
	
select data -->
	SELECT column_list
	FROM table_name;
	
	SELECT Name
	FROM student_details;
	
	SELECT Name, Roll, Age, GPA
	FROM student_details;

	SELECT *
	FROM student_details;
	
	DISTINCT (duplicate value thakle segula bad diye dibe)
		SELECT DISTINCT City
		FROM student_details;
	
	LIMIT (kotogula dekhte cai)
		SELECT *
		FROM student_details
		LIMIT 3;
		
		SELECT *
		FROM student_details
		LIMIT 1, 3; // LIMIT koyta bad dibe, koyta dekhabe;
		
	ORDER BY .......
		// alphabatically ascending order
		SELECT *
		FROM student_details
		ORDER BY Name;
		
		// alphabatically descending order
		SELECT Roll, Name, GPA
		FROM student_details
		ORDER BY Name DESC;
		
	// by default ascending order a kaj kore
	
arithmetic operator
	select 5 + 2;
	ans: 7
	select 5 - 2;
	ans: 3
	select 5 * 2;
	ans: 10
	select 5 / 2;
	ans: 2.5000
	select 5 % 2;
	ans: 1
